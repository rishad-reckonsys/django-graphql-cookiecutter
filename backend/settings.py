"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

from kombu.utils.url import safequote


def env(name, default=None):
    return os.environ.get(name, default)


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY", "not-so-secret")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", "0") == "1"

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "graphene_django",
    "corsheaders",
    "django_extensions",
    "backend.core",
    "backend.contrib",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DEFAULT_DB = str(os.path.join(BASE_DIR, "db.sqlite3"))

DATABASES = {
    "default": {
        "ENGINE": env("DATABASE_ENGINE", default="django.db.backends.sqlite3"),
        "NAME": env("DATABASE_NAME", DEFAULT_DB),
        "USER": env("DATABASE_USER"),
        "HOST": env("DATABASE_HOST"),
        "PORT": env("DATABASE_PORT"),
        "PASSWORD": env("DATABASE_PASSWORD"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # noqa: E501
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

AUTH_USER_MODEL = "core.User"

GRAPHENE = {
    "SCHEMA": "backend.graphql.schema",
    "SCHEMA_OUTPUT": "../frontend/schema.json",
    "MIDDLEWARE": [
        "graphql_jwt.middleware.JSONWebTokenMiddleware",
        "graphene_django.debug.DjangoDebugMiddleware",
    ],
}

AUTHENTICATION_BACKENDS = [
    "graphql_jwt.backends.JSONWebTokenBackend",
    "django.contrib.auth.backends.ModelBackend",
    "backend.core.auth_backend.PhoneOTPBackend",
]

GRAPHQL_JWT = {
    "JWT_VERIFY_EXPIRATION": False,
    # uncomment below lines for enabling time-bound sessions
    # 'JWT_EXPIRATION_DELTA': timedelta(minutes=60),
    # 'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=7),
}

CORS_ALLOW_ALL_ORIGINS = env("CORS_ALLOW_ALL_ORIGINS", "0") == "1"
CORS_ORIGIN_WHITELIST = str(env("CORS_ORIGIN_WHITELIST")).split(", ")
CORS_ALLOW_METHODS = ["GET", "POST"]

FRONTEND_CHOICES = "../frontend/src/CHOICES.js"

FRONTEND_PREFIX = env("FRONTEND_PREFIX", "http://localhost:3000")

# AWS
AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID", "minioadmin")
AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY", "minioadmin")
AWS_BUCKET_NAME = env("AWS_BUCKET_NAME", "backend-local")
AWS_BUCKET_REGION = env("AWS_BUCKET_REGION", "us-east-1")
AWS_EXPIRY = 604700
AWS_S3_ENDPOINT_URL = env("AWS_S3_ENDPOINT_URL")
AWS_REGION = env("AWS_REGION", "us-east-1")
AWS_S3_ADDRESSING_STYLE = env("AWS_S3_ADDRESSING_STYLE")


REDIS_HOST = env("REDIS_HOST", "127.0.0.1:6379")
REDIS_TOKEN = env("REDIS_TOKEN", "")

aws_access_key = safequote(AWS_ACCESS_KEY_ID)
aws_secret_key = safequote(AWS_SECRET_ACCESS_KEY)


if env("USE_CELERY_REDIS", "1") == "1":
    if REDIS_TOKEN == "#":
        CELERY_BROKER_URL = f"redis://{REDIS_HOST}/0"
    else:
        CELERY_BROKER_URL = f"redis://:{REDIS_TOKEN}@{REDIS_HOST}/0"
else:
    CELERY_BROKER_URL = f"sqs://{aws_access_key}:{aws_secret_key}@"
    CELERY_BROKER_TRANSPORT_OPTIONS = {"region": AWS_REGION}


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = env("EMAIL_HOST", "localhost")
EMAIL_PORT = env("EMAIL_PORT", "1025")
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
EMAIL_USE_SSL = env("EMAIL_USE_SSL") == "1"


if USE_TZ:
    CELERY_TIMEZONE = TIME_ZONE

SIO_SERVER_PORT = int(env("SIO_SERVER_PORT", "8888"))
